{"version":3,"sources":["../src/module.js"],"names":["_","Markers","MetricsPanelCtrl","leaflet","leafletCSS","fontawesome","Builder","Presenter","pinPath","panelDefaults","symbols","base_layer","attribution","EventsMapCtrl","$scope","$injector","events","on","onDataReceived","bind","onRender","onInitEditMode","defaults","panel","options","mso","icon","color","session_drop","call_spike","change","engineer","map","view","top_left","bottom_right","max_zoom","builder","presenter","markers","L","layerGroup","data","render","invalidateSize","clearLayers","call","marker","scope","elem","attrs","ctrl","mapElem","find","topLeft","bottomRight","worldCopyJump","_initializeMap","fitBounds","VectorMarkers","MAP_PIN","tileLayer","maxZoom","zoom","reuseTiles","addTo","addEditorTab","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash'\n// import {injectVectorMarkers} from './inject-markers'\nimport {Markers} from './Markers'\nimport './module.css!'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport * as leaflet from './external/leaflet/leaflet'\nimport * as leafletCSS from './external/leaflet/leaflet.css!'\nimport * as fontawesome from './external/font-awesome-4.7.0/css/font-awesome.min.css!'\nimport {Builder} from './util/builder'\nimport {Presenter} from './util/presenter'\n\nconst pinPath = 'M16,1 C7.7146,1 1,7.65636364 1,15.8648485 C1,' + \n                '24.0760606 16,51 16,51 C16,51 31,24.0760606 31,' + \n                '15.8648485 C31,7.65636364 24.2815,1 16,1 L16,1 Z'\nconst panelDefaults = {\n  symbols: {},\n  base_layer: 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png',\n  attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\" target=\"blank\">OpenStreetMap</a>, &copy;' +\n               '<a href=\"http://stamen.com\" target=\"blank\">Stamen Design</a>',\n}\n\nexport class EventsMapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    _.defaults(this.panel, panelDefaults)\n    \n    this.options = {\n      symbols:{\n        mso:{ icon:\"exclamation-triangle\", color:\"red\" },\n        session_drop:{ icon:\"tint\", color:\"#15a310\" },\n        call_spike:{ icon:\"phone\", color:\"#199fff\" },\n        change:{ icon:\"wrench\", color:\"#9822d8\" },\n        engineer:{ icon:\"male\", color:\"#ff59f9\" }\n      },\n      map: {\n        view: {\n          top_left:[ 58.744384, -8.329295 ],\n          bottom_right:[ 49.983103, 1.719198 ],\n          max_zoom:16\n        }\n      }\n    }\n\n    this.builder = new Builder()\n    this.presenter = new Presenter(options.symbols)\n    this.markers = L.layerGroup([])\n  }\n\n  onDataReceived (data) {\n    this.data = []\n    this.render()\n  }\n\n  onRender () {\n    // var curr_center = this.map.getCenter() \n    this.map.invalidateSize()\n    this.markers.clearLayers()\n\n    this.events = this.builder.call(this.data)\n    this.presenter.call(this.events)\n    this.marker.call(this.markers, this.events)\n    // this.map.setView(curr_center) \n  }\n\n  link (scope, elem, attrs, ctrl) {\n    var mapElem = elem.find('#map')[0]\n    var topLeft = this.options.map.view.top_left\n    var bottomRight = this.options.map.view.bottom_right\n\n    ctrl.map = L.map(mapElem, {worldCopyJump: true})\n    this._initializeMap()\n    this.map.fitBounds([topLeft, bottomRight])\n  }\n  \n  _initializeMap () {\n    L.VectorMarkers = {}\n    L.VectorMarkers.MAP_PIN = pinPath \n    L.tileLayer(this.options.map.base_layer, {\n      attribution: this.options.map.attribution,\n      maxZoom: this.options.map.view.max_zoom,\n      zoom: 5,\n      reuseTiles: true,\n    }).addTo(this.map)\n\n    // this.map.attributionControl.setPrefix('')\n    this.markers.addTo(this.map)\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/events-map-panel/editor.html');\n  }\n}\n\nEventsMapCtrl.templateUrl = 'module.html'\nexport { EventsMapCtrl as PanelCtrl }\n"]}