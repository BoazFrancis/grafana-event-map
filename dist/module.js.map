{"version":3,"sources":["../src/module.js"],"names":["_","injectVectorMarkers","MetricsPanelCtrl","leaflet","leafletCSS","fontawesome","EventsMapCtrl","$scope","$injector","events","on","onDataReceived","bind","onRender","onInitEditMode","options","symbols","mso","icon","color","session_drop","call_spike","change","engineer","map","base_layer","attribution","view","top_left","bottom_right","max_zoom","markers","L","layerGroup","data","type","coord","timestamp","console","log","render","invalidateSize","clearLayers","forEach","_addEventLayer","fitBounds","scope","elem","attrs","ctrl","mapElem","find","worldCopyJump","_initializeMap","event","addLayer","marker","VectorMarkers","prefix","markerColor","tileLayer","maxZoom","reuseTiles","addTo","attributionControl","setPrefix","addEditorTab","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["import _ from 'lodash'\nimport {injectVectorMarkers} from './inject-markers'\nimport './module.css!'\nimport {MetricsPanelCtrl} from 'app/plugins/sdk'\nimport * as leaflet from './external/leaflet/leaflet'\nimport * as leafletCSS from './external/leaflet/leaflet.css!'\nimport * as fontawesome from './external/font-awesome-4.7.0/css/font-awesome.min.css!'\n\nexport class EventsMapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n  // this.panelDefaults = {\n  //   mapCenter: '(0°, 0°)',\n  //   mapCenterLatitude: 0,\n  //   mapCenterLongitude: 0,\n  //   initialZoom: 1,\n  // }\n  //   _.defaults(this.panel, this.panelDefaults)\n    this.events.on('data-received', this.onDataReceived.bind(this))\n    this.events.on('render', this.onRender.bind(this))\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n\nthis.options = {\n  symbols:{\n    mso:{ icon:\"exclamation-triangle\", color:\"red\" },\n    session_drop:{ icon:\"tint\", color:\"#15a310\" },\n    call_spike:{ icon:\"phone\", color:\"#199fff\" },\n    change:{ icon:\"wrench\", color:\"#9822d8\" },\n    engineer:{ icon:\"male\", color:\"#ff59f9\" }\n  },\n  map: {\n    base_layer: 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png',\n    attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\" target=\"blank\">OpenStreetMap</a>, &copy;' +\n                 '<a href=\"http://stamen.com\" target=\"blank\">Stamen Design</a>',\n    view: {\n      top_left:[ 58.744384, -8.329295 ],\n      bottom_right:[ 49.983103, 1.719198 ],\n      max_zoom:16\n    },\n  }\n}\n    this.markers = L.layerGroup([])\n    this.data = [{type:\"mso\", coord:[52.15491,-1.6], timestamp: 123184937 }, \n  {type: \"session_drop\", coord:[52.15491,1], timestamp: 634789348}, \n  {type:\"call_spike\", coord:[55.95206, -3.19648], timestamp:672384087}, \n  {type:\"engineer\", coord:[51.509865,-0.118092], timestamp:7643409284}, \n  {type:\"change\", coord:[53.4105800,-2.9779400], timestamp:1237698379}, \n  {type:\"mso\", coord:[51.541148, -0.011019], timestamp:322368678},\n  {type:\"session_drop\", coord:[51.499181, -0.178182], timestamp:324278878},\n  {type: \"engineer\", coord:[58.242793, -4.553242], timestamp:6527397236}]\n\n  }\n\n  onDataReceived (data) {\n    // this.data = data\n    console.log(\"received\")\n    console.log(data)\n    this.render();\n  }\n\n  onRender () {\n    // var curr_bounds = this.map.getBounds() \n    this.map.invalidateSize()\n    this.markers.clearLayers()\n    this.data.forEach(this._addEventLayer, this)\n    // this.map.fitBounds(curr_bounds)\n    this.map.fitBounds([this.options.map.view.top_left, this.options.map.view.bottom_right])\n  }\n\n  link (scope, elem, attrs, ctrl) {\n    var mapElem = elem.find('#map')[0]\n    ctrl.map = L.map(mapElem, {worldCopyJump: true})\n    this._initializeMap()\n  }\n  \n  _addEventLayer (event) {\n    this.markers.addLayer(L.marker(event.coord, {\n      icon: L.VectorMarkers.icon({\n        icon: this.options.symbols[event.type].icon,\n        prefix: 'fa',\n        markerColor: this.options.symbols[event.type].color\n      })\n    }))\n  }\n\n  _initializeMap () {\n    L.tileLayer(this.options.map.base_layer, {\n      attribution: this.options.map.attribution,\n      maxZoom: this.options.map.view.max_zoom,\n      reuseTiles: true,\n    }).addTo(this.map)\n\n    this.map.attributionControl.setPrefix('')\n    this.markers.addTo(this.map)\n\n    injectVectorMarkers()\n  }\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/events-map-panel/editor.html');\n  }\n}\n\nEventsMapCtrl.templateUrl = 'module.html'\nexport { EventsMapCtrl as PanelCtrl }\n"]}